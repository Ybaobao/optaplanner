{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.39.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.solver.SolverJob<Solution_, ProblemId_> org.optaplanner.core.api.solver.SolverManager<Solution_, ProblemId_>::solveAndListen(ProblemId_, java.util.function.Function<? super ProblemId_, ? extends Solution_>, java.util.function.Consumer<? super Solution_>, java.util.function.Consumer<? super Solution_>, java.util.function.BiConsumer<? super ProblemId_, ? super java.lang.Throwable>)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverManager",
          "methodName": "solveAndListen",
          "elementKind": "method",
          "justification": "SolverManager needs an API that allows a user to listen to both best solution and solver terminated events"
        }
      ]
    }
  }
}
